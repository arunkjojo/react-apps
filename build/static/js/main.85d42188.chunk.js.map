{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","searchPlace","e","className","type","placeholder","value","onChange","target","onClick","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"0NAMaA,EAAY,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEAEHC,IAAMC,IANnB,kDAM2B,CAE/BC,OAAO,CAEHC,EAAGL,EAEHM,MAAO,SAEPC,MAZI,sCAEY,uBAEjBC,EAFiB,EAEjBA,KAFiB,kBAgBjBA,GAhBiB,2CAAH,sD,OCiCVC,EAnCH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAAW,uCAAG,WAAOC,GAAP,eAAAd,EAAA,sEAEGF,EAAaC,GAFhB,OAEVQ,EAFU,OAGhBK,EAAWL,GACXG,EAAS,IAJO,2CAAH,sDAQjB,OACE,sBAAKK,UAAU,iBAAf,UACE,uBAAOC,KAAK,OAAOD,UAAU,SAASE,YAAY,eAAeC,MAAOnB,EAAOoB,SAAU,SAACL,GAAD,OAAOJ,EAASI,EAAEM,OAAOF,UAClH,wBAAQH,UAAU,SAASM,QAASR,EAApC,oBACCF,EAAQW,MACP,sBAAKP,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,+BAAOJ,EAAQY,OACf,8BAAMZ,EAAQa,IAAIC,aAEpB,sBAAKV,UAAU,YAAf,UACGW,KAAKC,MAAMhB,EAAQW,KAAKM,MACzB,2CAEF,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAYc,IAAG,4CAAuClB,EAAQA,QAAQ,GAAGmB,KAA1D,WAAyEC,IAAKpB,EAAQA,QAAQ,GAAGqB,cAC/H,4BAAIrB,EAAQA,QAAQ,GAAGqB,wBC5BnCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.85d42188.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\n\r\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\r\n\r\nexport const fetchWeather = async(query)=>{\r\n\r\n    const {data} = await axios.get(URL,{\r\n\r\n        params:{\r\n        \r\n            q: query,\r\n\r\n            units: 'metric',\r\n\r\n            APPID : API_KEY,\r\n\r\n        }\r\n        \r\n    });\r\n\r\n    return data;\r\n\r\n}","import './App.css';\nimport React, { useState } from 'react';\nimport { fetchWeather } from './api/fetchWeather';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const searchPlace = async (e) => {\n    // if (e.key === 'Enter') {\n      const data = await fetchWeather(query);\n      setWeather(data);\n      setQuery('');\n    // }\n  }\n\n  return (\n    <div className=\"main-container\">\n      <input type=\"text\" className=\"search\" placeholder=\"Search Place\" value={query} onChange={(e) => setQuery(e.target.value)} />\n      <button className=\"search\" onClick={searchPlace} >Search</button>\n      {weather.main && (\n        <div className=\"city\">\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}